# Generated by Django 3.2.9 on 2022-05-25 12:18

from django.db import migrations
from django.conf import settings
from django.contrib.auth.hashers import make_password
from django.utils import timezone


def create_first_database(apps, schema_editor):
    """ Create the PAUL database if no databases exist """

    Database = apps.get_model("api", "Database")

    if not Database.objects.exists():
        Database.objects.create(name="PAUL")


def create_admin_and_group(apps, schema_editor):
    """ Create a superuser if none exist and assign it to the admin user group """

    Group = apps.get_model("auth", "Group")
    User = apps.get_model("auth", "User")

    group, created = Group.objects.get_or_create(name="admin")
    if not User.objects.filter(username=settings.DJANGO_ADMIN_EMAIL).count():
        admin = User.objects.create(
            username=settings.DJANGO_ADMIN_EMAIL,
            email=settings.DJANGO_ADMIN_EMAIL,
            last_login=timezone.now(),
            is_superuser=True,
            is_staff=True,
            password=make_password(settings.DJANGO_ADMIN_PASSWORD)
        )
        admin.groups.add(group)
        

class Migration(migrations.Migration):

    dependencies = [
        ('api', '0046_auto_20211206_1958'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.RunPython(create_first_database),
        migrations.RunPython(create_admin_and_group),
    ]


