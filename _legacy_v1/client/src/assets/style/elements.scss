.icon {
  align-items: center;
  display: inline-flex;
  justify-content: center;

  .material-design-icon {
    height: 1em;
    width: 1em;
    line-height: 1;
  }

  .material-design-icon > .material-design-icon__svg {
    height: 1em;
    width: 1em;
    fill: currentColor;
  }
}

.tag:not(body) {
  line-height: 1;
}

.b-table {
  .table-container {
    overflow: auto;
  }

  .table {
    border: 0;
    border-radius: 0;
    border-bottom: 1px solid $border;
    margin-top: -1px;
    // overflow: hidden;

    th {
      line-height: 1;
      padding: 14px 24px;
      font-size: $size-7;
      font-weight: $weight-bold;
      letter-spacing: 0.9px;

      &.is-sticky {
        background-color: $table-head-background-color;
        // background-color: transparent;
      }

      &.actions {
        right: 0;
      }
    }

    td {
      font-size: $size-6;
      // font-weight: $weight-semibold;
      line-height: 19px;
      color: $blue;

      &.actions {
        right: 0;
        // background-color: $grey-light;

        > div {
          display: flex;
          justify-content: flex-end;
          align-items: center;

          a {
            flex-shrink: 0;
            display: inline-flex;
            color: $blue;

            &:hover {
              color: $primary;
            }

            .icon {
              font-size: $size-4;
            }

            &:not(:last-child) {
              margin-right: 16px;
            }
          }
        }
      }
    }
  }

  .table-wrapper + .level {
    margin-top: -1.5rem;
  }

  .table-wrapper.has-sticky-header tr:first-child th {
    background: $table-head-background-color;
  }

  .level {
    padding: 20px 24px;

    .input,
    .pagination-link {
      border-color: $border;

      &:hover,
      &:focus {
        border-color: $grey-dark;
      }

      &[disabled] {
        display: none;
      }
    }

    .pagination-list {
      li:only-child {
        display: none;
      }
    }

    .input {
      height: 35px;
      font-size: $size-6;
    }

    .level-left {
      flex: 1;
      justify-content: space-between;
    }

    .pagination-per-page {
      display: flex;
      font-size: $size-6;
      align-items: center;

      .control {
        margin: 0 10px;

        .input {
          width: 60px;
          text-align: center;
        }
      }

      span {
        padding-left: 12px;
      }
    }

    .pagination-jump {
      .input {
        width: 140px;
        font-size: $size-6;
        margin-right: 12px;
      }
    }
  }
}

.filter-display {
  .label {
    font-size: $size-7;
  }

  .tag {
    font-weight: $weight-medium;
    font-size: $size-7;
    white-space: normal;
    min-height: 2em;
    height: auto;
    max-width: 100%;
    padding: 3px 8px;
  }

  &.is-horizontal {
    display: inline-flex;
    flex-wrap: wrap;

    .field {
      margin-right: 12px;
    }
  }
}

.filter-component {
  height: 100%;
  display: flex;
  flex-direction: column;

  .filter-body {
    flex: 1;
    overflow-y: auto;
    padding: 18px 24px;

    .control + a {
      display: inline-block;
      margin-top: 6px;
      margin-left: 8px;
    }

    .input {
      font-size: $size-6;
    }

    .checkbox-list {
      margin-top: 18px;
    }

    &[disabled] {
      pointer-events: none;

      a {
        color: $grey-dark;
      }

      .b-checkbox {
        color: $grey;

        .check {
          border-color: $grey;
        }

        input[type='checkbox']:checked {
          & + .check {
            background-color: $grey;
            border-color: $grey-dark;
          }

          & ~ .control-label {
            color: $grey-dark;
          }
        }
      }
    }
  }

  .filter-buttons {
    padding: 12px 24px;
    background-color: $white;
    border-top: 1px solid $grey;
    display: flex;
    justify-content: space-between;
    align-items: center;

    .field {
      color: $grey-darker;
      font-size: $size-6;
      margin-bottom: 0;
    }

    .buttons {
      flex-wrap: nowrap;
    }
  }
}

.delete {
  border-radius: 4px;
  background-color: transparent;

  &:before,
  &:after {
    background-color: $black-light;
  }

  &:hover {
    background-color: transparent;

    &:before,
    &:after {
      background-color: $primary;
    }
  }
}

.is-dark {
  .delete {
    &:before,
    &:after {
      background-color: $white;
    }
  }
}
